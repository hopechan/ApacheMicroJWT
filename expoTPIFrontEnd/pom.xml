<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
    <artifactId>expoTPI</artifactId>
    <groupId>ues.edu.sv.tpi135</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

    <groupId>ues.edu.sv.tpi135</groupId>
    <artifactId>expoTPIFrontEnd</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>expoTPIFrontEnd</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
         <!-- Liberty server properties -->
        <server.name>UIServer</server.name>
        <!-- Application properties -->
        <warfile.name>UIService</warfile.name>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>io.openliberty.guides</groupId>
            <artifactId>resources</artifactId>
            <version>${version.shared.keystore}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.json</artifactId>
            <version>1.0.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>javax.faces-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.jwt</artifactId>
            <version>1.0.15</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- Copy the UI application to the liberty server -->
                    <execution>
                        <id>copy-app-to-liberty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/${server.name}/apps</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${warfile.name}.war</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy the keystore that Liberty will use -->
                    <execution>
                        <id>copy-keystore-to-liberty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifact>
                                    <groupId>io.openliberty.guides</groupId>
                                    <artifactId>resources</artifactId>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/${server.name}/resources/security</outputDirectory>
                                    <includes>keystore.jceks</includes>
                                </artifact>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Liberty setup. -->
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-liberty</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-default-server</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>create-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>install-apps</goal>
                        </goals>
                        <configuration>
                            <appsDirectory>apps</appsDirectory>
                            <stripVersion>true</stripVersion>
                            <installAppPackages>project</installAppPackages>
                            <looseApplication>true</looseApplication>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>test-start-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>test-stop-server</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <serverName>${server.name}</serverName>
                    <appArchive>${project.build.directory}/${warfile.name}.war</appArchive>
                    <configFile>src/main/liberty/config/server.xml</configFile>
                    <bootstrapProperties>
                        <server.http.port>${frontend.http.port}</server.http.port>
                        <server.https.port>${frontend.https.port}</server.https.port>
                        <backend.https.port>${backend.https.port}</backend.https.port>
                        <backend.hostname>${backend.hostname}</backend.hostname>
                        <application.name>${warfile.name}.war</application.name>
                        <jwt.issuer>${jwt.issuer}</jwt.issuer>
                    </bootstrapProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
